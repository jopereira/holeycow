This How-To explains how to run the prototype in a single physical machine.
In this machine we run a master and several slaves in independent VMs.

To run the prototype in several physical machines the process resembles this one. However it is necessary
to change the local parameters given, as example, in this document.


*********************Installing XEN and Compiling Holey COW******************

Download XEN-3.3.0 Source Package.

For ubuntu the Source package is located at: http://packages.ubuntu.com/source/hardy-backports/xen-3.3

Donwload HoleyCOW source.

In Holeysrc/frontend/blktap/defs.h it is defined where file sockets are created, by default is /var/run/holey/.
If needed it is possible to change it.

mv Holeysrc/frontend/blktap/To-copy/BlktapController.py xen-src/tools/python/xen/xend/server/

mv Holeysrc/frontend/blktap/To-copy/* xen-src/tools/blktap/drivers/ (move all files except BlktapController.py)

Compile Xen kernel.

IN ubuntu to compile source package do:

cd xen-src/
dpkg-buildpackage
cd ..
dpkg -i *.deb


********************Running Holey COW******************************

After compiling the XEN Kernel.

Create VM image files.

If xen-tools are used this can be done by typing:

xen-create-image --hostname=teste1 --ip=10.0.0.1 --ide --force

Create one image for each slave and another for the writer.

Holey COW tap is configured to work in a VM partition. 
In folder imagestemplates you have a configuration file example for
master and for slave.

The part where is necessary to change is:

root        = '/dev/hda1 ro'
disk        = [
                  'tap:aio:/home/xenholey/domains/teste1/disk.img,hda1,w',
                  'tap:holey:/home/image1,hda2,w',
              ]

/home/xenholey/domains/teste1/disk.img is the path to the VM image. We use XEN tap:aio to manage this virtual disk.

/home/image1 is the path to the file that will be controlled by Holey COW tap.

the file image1 (for VM with id 1) and image2 (for VM with id 2) must be created by doing:

dd if=/dev/zero of=/home/image1 bs=4K count=1 seek=1K (The size here doesn't matter)
dd if=/dev/zero of=/home/image2 bs=4K count=1 seek=1K (The size here doesn't matter)

These files are only necessary for the Tap driver to parse the VM id. The file name must end with the VM id.
The Id is important to pass the initial arguments to the HoleyCow tap driver.

The file that will be used as the real partition that will be written by the master is created by doing:

dd if=/dev/zero of=/home/image bs=4K count=1 seek=3M (Here the size must be the one we want the partition to have)

ATTENTION!! - This last file mus		t have the same name of the dummy files without the last number.
In the example given above, we created a file named image that will be the partition written by the master VM.
We created two dummy files, image1 and image2, that will be neeeded by the tap driver in order to pass the initial arguments.
The name of the real partition must not end with a number...
This detail will be changed in a future version.


- Before Running the VMs

Start the controller with:

java Holeycontrollersource/src/org.holeycow.coordinator.Main


- Create two COW snapshot files one for each VM

touch cow0-image
touch cow1-image


Finally, we need to run The VMs.

xm create -c vm1conffile.cfg (launch VM 1)

xm create -c vm2conffile.cfg (launch VM 2)

Both VMs will block until the arguments are passed.
It is necessary to launch The VMs first and then wait a few seconds before doing the next operations.

/************************ PAssing arguments *********************************/

cd holeysrc/frontend/blktap/slave master init/

compile init.c with make.

./init VM_id cow_snapshot_file_for_this_VM(fullpath) file_where_stderr_is_written(fullpath) file_where_log_is_written(fullpath)

As example the values could be:

Pass arguments to VM with id 1 (this was defined in VM configuration file as told above), cow snapshot is in /home/ folder (snapshots files were created with touch in this location previously, as described above). Finnaly, stderr and log are written in /home/holeil/ folder.

./init 1 /home/image1-cow /home/holey/stderr  /home/holey/log

To the other VM the process is similar we only change the id and files...






